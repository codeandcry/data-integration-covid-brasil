version: '3.8'

services:
  minio:
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    image: minio/minio:RELEASE.2021-12-20T22-07-16Z.fips
    env_file:
      - .env
    volumes:
      - ./minio_data:/data

  airflow-web:
    container_name: airflow-web
    image: bitnami/airflow:latest
    depends_on:
      - airflowdb
      - redis
    volumes:
      - ./dags:/opt/bitnami/airflow/dags
      - ./plugins:/opt/bitnami/airflow/plugins
      - ./requirements.txt:/bitnami/python/requirements.txt
      - ./notebooks:/opt/notebooks
    env_file:
      - .env
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    container_name: airflow-scheduler
    image: bitnami/airflow-scheduler:latest
    depends_on:
      - airflow-web
    volumes:
      - ./dags:/opt/bitnami/airflow/dags
      - ./plugins:/opt/bitnami/airflow/plugins
      - ./requirements.txt:/bitnami/python/requirements.txt
      - ./notebooks:/opt/notebooks
    env_file:
      - .env

  airflow-worker:
    container_name: airflow-worker
    image: bitnami/airflow-worker:latest
    depends_on:
      - airflow-web
    volumes:
      - ./dags:/opt/bitnami/airflow/dags
      - ./plugins:/opt/bitnami/airflow/plugins
      - ./requirements.txt:/bitnami/python/requirements.txt
      - ./notebooks:/opt/notebooks
      - ./jdk1.8.0_301:/opt/jdk1.8.0_301
    env_file:
      - .env
    environment:
      - JAVA_HOME=/opt/jdk1.8.0_301

  airflowdb:
    container_name: airflowdb
    image: bitnami/postgresql:latest
    env_file:
      - .env
    ports:
      - "5432:5432"

  redis:
    container_name: airflow-redis
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  anaconda:
    container_name: anaconda
    build:
      context: .
      dockerfile: ./anaconda/Dockerfile
    volumes:
      - ./notebooks:/opt/notebooks
    ports:
      - "8888:8888"
    command:
      /opt/conda/bin/jupyter notebook --notebook-dir=/opt/notebooks --ip='0.0.0.0' --port=8888 --no-browser --allow-root
    tty: true

  data_warehouse:
    image: mysql:5.7
    restart: always
    env_file:
      - .env
    ports:
      - '3306:3306'
    volumes:
      - mysql:/var/lib/mysql

  spark-master:
    image: bitnami/spark:latest
    ports:
      - '7077:7077'
      - '9090:8080'
    volumes:
      - ./spark_data:/bitnami/spark
    env_file:
      - .env

  spark-worker:
    image: bitnami/spark:latest
    depends_on:
      - spark-master
    volumes:
      - ./spark_worker_data:/bitnami/spark
    env_file:
      - .env
    environment:
      - SPARK_MODE=worker


volumes:
  minio_data:
    driver: local
  postgres-data:
    driver: local
  dags:
    driver: local
  notebooks:
    driver: local
  mysql:
    driver: local
  spark_data:
    driver: local